{"ast":null,"code":"import { BehaviorSubject } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"./crud.service\";\nexport let receitasService = /*#__PURE__*/(() => {\n  var _receitasService;\n  class receitasService {\n    constructor(crud) {\n      this.crud = crud;\n      this.dbPath = \"receitas\";\n      this.receitasSubject = new BehaviorSubject([]); // Armazenando os itens aqui\n      this.receitas$ = this.receitasSubject.asObservable(); // Observable para ser consumido pelos componentes\n      this.path();\n    }\n    path() {\n      this.crud.withPath(this.dbPath);\n    }\n    cadastrarReceita(data, categoria, descricao, valor) {\n      const dataValida = new Date(data);\n      const dataCorreta = new Date(dataValida.getTime() + dataValida.getTimezoneOffset() * 60000);\n      const dataFormatada = new Intl.DateTimeFormat('pt-BR').format(dataCorreta);\n      const novaReceita = {\n        data: dataFormatada,\n        categoria: categoria,\n        descricao: descricao,\n        valor: valor\n      };\n      this.crud.createItem(novaReceita);\n    }\n    listarReceitas() {\n      this.crud.getItems().subscribe(data => {\n        const receitas = data.map(item => {\n          const key = item.key;\n          const value = item.payload.val();\n          return {\n            key,\n            ...value\n          };\n        });\n        this.receitasSubject.next(receitas);\n      });\n    }\n  }\n  _receitasService = receitasService;\n  _receitasService.ɵfac = function receitasService_Factory(__ngFactoryType__) {\n    return new (__ngFactoryType__ || _receitasService)(i0.ɵɵinject(i1.CrudService));\n  };\n  _receitasService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: _receitasService,\n    factory: _receitasService.ɵfac,\n    providedIn: 'root'\n  });\n  return receitasService;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}