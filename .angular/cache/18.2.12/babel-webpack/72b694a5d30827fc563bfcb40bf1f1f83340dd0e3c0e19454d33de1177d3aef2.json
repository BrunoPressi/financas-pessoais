{"ast":null,"code":"import { BehaviorSubject } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"./crud.service\";\nexport let DespesasService = /*#__PURE__*/(() => {\n  var _DespesasService;\n  class DespesasService {\n    constructor(crud) {\n      this.crud = crud;\n      this.dbPath = \"despesas\";\n      this.despesasSubject = new BehaviorSubject([]); // Armazenando os itens aqui\n      this.despesas$ = this.despesasSubject.asObservable(); // Observable para ser consumido pelos componentes\n      this.despesasTotalSubject = new BehaviorSubject(0); // Armazenando os itens aqui\n      this.despesasTotal$ = this.despesasTotalSubject.asObservable(); // Observable para ser consumido pelos componentes\n      this.path();\n      this.listarDespesas();\n      this.despesasTotal();\n    }\n    path() {\n      this.crud.withPath(this.dbPath);\n    }\n    cadastrarDespesa(data, categoria, descricao, valor) {\n      const dataValida = new Date(data);\n      const dataCorreta = new Date(dataValida.getTime() + dataValida.getTimezoneOffset() * 60000);\n      const dataFormatada = new Intl.DateTimeFormat('pt-BR').format(dataCorreta);\n      const novaDespesa = {\n        data: dataFormatada,\n        categoria: categoria,\n        descricao: descricao,\n        valor: valor\n      };\n      this.crud.createItem(novaDespesa, this.dbPath);\n    }\n    listarDespesas() {\n      this.crud.getItems(this.dbPath).subscribe(data => {\n        const despesas = data.map(item => {\n          const key = item.key;\n          const value = item.payload.val();\n          return {\n            key,\n            ...value\n          };\n        });\n        this.despesasSubject.next(despesas);\n      });\n    }\n    despesasTotal() {\n      this.crud.getItems(this.dbPath).subscribe(data => {\n        const receitas = data.map(item => {\n          const key = item.key;\n          const value = item.payload.val();\n          return {\n            key,\n            ...value\n          };\n        });\n        let somaValor = 0;\n        receitas.forEach(data => {\n          somaValor += Number(data.valor);\n        });\n        console.log(somaValor);\n        this.despesasTotalSubject.next(somaValor);\n      });\n    }\n  }\n  _DespesasService = DespesasService;\n  _DespesasService.ɵfac = function DespesasService_Factory(__ngFactoryType__) {\n    return new (__ngFactoryType__ || _DespesasService)(i0.ɵɵinject(i1.CrudService));\n  };\n  _DespesasService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: _DespesasService,\n    factory: _DespesasService.ɵfac,\n    providedIn: 'root'\n  });\n  return DespesasService;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}